class Solution(object):
    def search(self, nums, target):
        """
        :type nums: List[int]
        :type target: int
        :rtype: int
        """
        if len(nums) == 0:
            return -1
        if nums[0] < nums[-1]:
            pivot = 0
        else:
            start = 0
            end = len(nums)
        
            while end-start > 1:
                mid = start+(end-start)//2
                if nums[mid] > nums[0]:
                    start = mid
                else:
                    end = mid
            if end == len(nums):
                pivot = start
            elif nums[start] < nums[end]:
                pivot = start
            else:
                pivot = end
        print("PIVOT", pivot)
        
        if pivot == 0:
            start = 0
            end = len(nums)
        elif target >= nums[0]:
            start = 0
            end = pivot
        else:
            start = pivot
            end = len(nums)
        
        return Solution.findinarr(self, nums, start, end, target)
        
    def findinarr(self, nums, start, end, target):
        while end-start > 1:
            mid = start+(end-start)//2
            if nums[mid] == target:
                return mid
            elif nums[mid] > target:
                end = mid
            else:
                start = mid
        if nums[start] == target:
            return start
        elif end < len(nums) and nums[end] == target:
            return end
        else:
            return -1
        
   
