class Solution(object):
    def maxSubArray(self, nums):
        """
        :type nums: List[int]
        :rtype: int
        """
        newarr = [[nums[0], nums[0]]]
        for i in range(1, len(nums)):
            new1 = max(nums[i], nums[i]+newarr[i-1][1])
            new0 = max(new1, newarr[i-1][0])
            newarr.append([new0, new1])
        return max(newarr[len(nums)-1])
        
        #return max(Solution.helper(self, nums, len(nums)))
        
    #def helper(self, nums, last):
        #if len(nums) <= 1 or last <= 1:
            #return [nums[0], nums[0]]
        #[mid, right] = Solution.helper(self, nums, last-1)
        #newright = max(nums[last-1], nums[last-1]+right)
        #newmid = max(mid, newright)
        #return [newmid, newright]
