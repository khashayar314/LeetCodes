class Solution(object):
    def checkInclusion(self, s1, s2):
        """
        :type s1: str
        :type s2: str
        :rtype: bool
        """
        p = s1
        s = s2
        answer = []
        dict_p = {}
        for char in p:
            if char in dict_p:
                dict_p[char] += 1
            else:
                dict_p[char] = 1
        
        dict_s = dict_p
        for i in range(min(len(p), len(s))):
            char = s[i]
            if char in dict_s:
                dict_s[char] -= 1
                if dict_s[char] == 0:
                    dict_s.pop(char)
            else:
                dict_s[char] = -1
                    
        for i in range(len(p), len(s)):
            if dict_s == {}:
                answer.append(i-len(p))
            char = s[i]
            old_char = s[i-len(p)]
            if char in dict_s:
                dict_s[char] -= 1
                if dict_s[char] == 0:
                    dict_s.pop(char)
            else:
                dict_s[char] = -1
            if old_char in dict_s:
                dict_s[old_char] += 1
                if dict_s[old_char] == 0:
                    dict_s.pop(old_char)
            else:
                dict_s[old_char] = 1
        
        if dict_s == {}:
            answer.append(len(s)-len(p))
        if answer != []:
            return True
        return False
        
        
    def doesntpasssomecases(self, s1, s2):
        dict_s1 = {}
        for char in s1:
            if char in dict_s1:
                dict_s1[char] += 1
            else:
                dict_s1[char] = 1
        
        dict_s2 = dict_s1.copy()
        current = 0
        start = current
        while current < len(s2):
            char = s2[current]
            if char not in dict_s1:
                current += 1
                start = current
                dict_s2 = dict_s1.copy()
                #print("not in dict", current, start, char, dict_s2)
                continue
            
            if char in dict_s2:
                #print("char in dict s2", current, start, char, dict_s2)
                dict_s2[char] -= 1
                if dict_s2[char] == 0:
                    dict_s2.pop(char)
                if dict_s2 == {}:
                    #print("hey", current)
                    return True
            else:
                old_char = s2[start]
                if old_char != char:
                    dict_s2[char] = -1
                    if old_char in dict_s2:
                        dict_s2[old_char] += 1
                    else:
                        dict_s2[old_char] = 1
                start += 1
                
                
                #print("char not in dict s2", current, start, char, dict_s2)
            current += 1
            
        return False
            
    
