"""
# Definition for a Node.
class Node(object):
    def __init__(self, val, prev, next, child):
        self.val = val
        self.prev = prev
        self.next = next
        self.child = child
"""

class Solution(object):
    def flatten(self, head):
        """
        :type head: Node
        :rtype: Node
        """
        if head:
            self.helper(head)
            return head
            
        
    def helper(self, node):
        if node.child == None:
            if node.next:
                return self.helper(node.next)
            else:
                return node
            
        later_node = node.next
        node.next = node.child
        node.child = None
        node.next.prev = node
        last_node = self.helper(node.next)
        if later_node:
            last_node.next = later_node
            later_node.prev = last_node
            return self.helper(later_node)
            
        else:
            return last_node
        
        
        
        
