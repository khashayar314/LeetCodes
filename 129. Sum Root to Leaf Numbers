# Definition for a binary tree node.
# class TreeNode(object):
#     def __init__(self, val=0, left=None, right=None):
#         self.val = val
#         self.left = left
#         self.right = right
class Solution(object):
    def sumNumbers(self, root):
        """
        :type root: TreeNode
        :rtype: int
        """
        return self.helper(root)[0]
        
        
    def helper(self, node):
        if node == None:
            return [0, []]
        if node.left == None and node.right == None:
            return [node.val, [1]]
            
        left_ans = self.helper(node.left)
        right_ans = self.helper(node.right)
        
        path_lengths = []
        total = left_ans[0]+right_ans[0]
        for path_length in left_ans[1]:
            total += node.val*(10**path_length)
            path_lengths.append(path_length+1)
        for path_length in right_ans[1]:
            total += node.val*(10**path_length)
            path_lengths.append(path_length+1)
        return [total, path_lengths]
